Register naming schemes:
t -> registers used for temp. data handling (values of calc.)
s -> address values which you (shouldn't) lose the reference to
a -> arguments/procedure parameters
v -> return value
ra -> return address
sp -> stack pointer

pc -> program counter

Jal & jr:
jal L1
jr  $ra
                                                                       	      jal --> inst.1 (pc - 4)
jal - jumps to a label and stores PC's previous position to the $ra register  pc ---> inst.2
jr $ra - goes back to ra
